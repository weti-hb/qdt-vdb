# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START gke_databases_qdrant_01_regional_pd_ha_app]
kind: HighAvailabilityApplication
apiVersion: ha.gke.io/v1
metadata:
  name: timo-qdrant-database3
  namespace: timo-qdrant
spec:
  resourceSelection:
    resourceKind: StatefulSet
  policy:
    storageSettings:
      requireRegionalStorage: false  # Switch to false for zonal storage
    failoverSettings:  # Failover settings are less relevant in a single-zone cluster
      forceDeleteStrategy: AfterNodeUnreachable
      afterNodeUnreachable:
        afterNodeUnreachableSeconds: 20  # 60 Seconds total / Keep this if you want quick recovery within the zone

# [END gke_databases_qdrant_01_regional_pd_ha_app]


The provided YAML file is a Kubernetes manifest for configuring a high-availability application using Google's Kubernetes Engine (GKE). The file is specifically designed to set up a Qdrant database with high availability features.

The file begins with licensing information, indicating that it is licensed under the Apache License, Version 2.0. This section also includes a link to the full license text and a disclaimer about the software being provided "as is" without warranties or conditions of any kind.

The main part of the file is a Kubernetes custom resource definition (CRD) for a HighAvailabilityApplication. The apiVersion is ha.gke.io/v1, and the kind is HighAvailabilityApplication. The metadata section specifies the name of the application (qdrant-database) and the namespace (qdrant) where it will be deployed.

The spec section contains the configuration details for the high-availability application. The resourceSelection field specifies that the resource kind to be managed is a StatefulSet, which is commonly used for stateful applications like databases.

The policy section outlines the high-availability policies. The storageSettings field has a requireRegionalStorage attribute set to true, indicating that the application requires regional storage for redundancy and failover purposes. This ensures that the data is replicated across multiple zones within a region, providing higher availability and durability.

The failoverSettings field defines the failover strategy. The forceDeleteStrategy is set to AfterNodeUnreachable, which means that the application will forcefully delete and recreate resources if a node becomes unreachable. The afterNodeUnreachable field specifies that the failover process should begin 20 seconds after a node becomes unreachable, with a total of 60 seconds before the failover is fully executed.

Overall, this YAML file configures a high-availability setup for the Qdrant database on GKE, ensuring that the application can tolerate node failures and maintain data availability through regional storage replication.
